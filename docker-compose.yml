version: "3.8"

services:
  # PostgreSQL Database
  database:
    build: ./database
    container_name: vsphere-database
    restart: unless-stopped
    environment:
      POSTGRES_DB: vsphere_monitoring
      POSTGRES_USER: vsphere_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-vsphere_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/backups:/backups
    ports:
      - "5432:5432"
    networks:
      - vsphere-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vsphere_user -d vsphere_monitoring"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # FastAPI Backend
  backend:
    build: ./FastAPI\ -\ vSphere
    container_name: vsphere-backend
    restart: unless-stopped
    environment:
      # vSphere Configuration
      VCENTER_URL: ${VCENTER_URL}
      VCENTER_USER: ${VCENTER_USER}
      VCENTER_PASSWORD: ${VCENTER_PASSWORD}
      VCENTER_PORT: ${VCENTER_PORT:-443}

      # Database Configuration
      POSTGRES_HOST: database
      POSTGRES_PORT: 5432
      POSTGRES_DB: vsphere_monitoring
      POSTGRES_USER: vsphere_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-vsphere_password}

      # API Configuration
      LOG_LEVEL: ${LOG_LEVEL:-INFO}

      # Terraform Configuration
      TERRAFORM_PATH: /usr/bin/terraform
    volumes:
      - ./Terraform\ -\ vSphere:/app/terraform
      - terraform_state:/app/terraform/state
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    networks:
      - vsphere-network
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/system/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # React Frontend
  frontend:
    build: ./Dashboard\ -\ vSphere
    container_name: vsphere-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_BASE_URL: http://localhost:8000
      REACT_APP_ASSETS_DIR: /public/assets
    ports:
      - "80:80"
      - "443:443"
    networks:
      - vsphere-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional - for SSL termination)
  nginx:
    image: nginx:alpine
    container_name: vsphere-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - vsphere-network
    depends_on:
      - frontend
      - backend
    profiles:
      - ssl

volumes:
  postgres_data:
    driver: local
  terraform_state:
    driver: local

networks:
  vsphere-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
